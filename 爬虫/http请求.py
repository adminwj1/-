'''
使用场景：进行客户端与服务端之间的消息传递时使用

GET：通过URL网址传递信息，可以直接在URL网址上添加要传递的信息
POST：可以向服务器提交数据，是一种比较流行的比较安全的数据传递方式
PUT：请求服务器存储一个资源，通常要指定存储的位置
DELETE：请求服务器删除一个资源
HEAD：请求获取对应的HTTP报头信息
OPTIONS：可以获取当前URL所支持的请求类型
'''

# GET请求
'''
特点：把数据拼接到请求路径的后面传递给服务器
优点：速度快
缺点：承载的数据量小，不安全
'''
import urllib.request